---
layout: post
title:      "Why I decided to start web development"
date:       2018-08-06 03:57:31 +0000
permalink:  why_i_decided_to_start_web_development
---


Having worked as mechanical engineer for three and a half years and studying it for four more years, I often faced challenging problems that required creative solutions. As an example, one of the prompts for a recent school project was to create a product with a given number of mechanical components. Being forced to think outside the box for approximately eight years has made me apply this kind of thinking to everyday life.

A common obstacle I face when coming up with solutions to problems inmechanical engineering is that they require so many tangible resources. Even for a simple prototype of a relatively simple product, I would need various measuring tools, rapid protytping machines (such as a 3-D printer), laser cutter,  and more. Thus, it is very challenging to create a product and implement a solution at an individual level in mechanical engineering. This is precisely why I embrace web development and coding: all I need is really my computer. 

My interest in web development grew organically While I was visiting my parents in Korea, I tutored English to students as a volunteer for community service. English is one of the most popular subjects in Korea with a market size of several billions dollars, and I soon felt the need to reach more students than only those I was tutoring face-to-face. However, there was no possible way for me to meet the demand even in a small English studying community. It was then that I decided to create a website that allows English language learners to communicate with each other. 

It should be noted that Korean websites are organized quite differently from that of America, whereby a substantial number of websites are what is referred to as “community websites.” Korean community websites are somewhat similar to Reddit ©  in that it allows users to communicate with each other on specific topics (much like how Reddit is organized by threads). the main difference is that while Reddit spans many topics via its numerous threads, Korean community websites usually stick to a specific theme. For example, there are separate websites for humor, baseball, the computer game "Football Manager", Cameras, "Twitch", etc. Within these community websites, online users actively start and engage in conversations regarding relevant themes via message boards (though sometimes threads can get off-track). 

As I started looking into various community websites , I realized that while there are countless active community websites, there was not one dedicated for English language learners. As a result,  I decided to build it myself using a Korean community website building platform called "Xpress Engine", which allows users to quickly build community websites without much knowledge of web development. In order to fully take advantage of this platform, however, I needed to learn front-end as well as back-end development. At the time, I was not familiar at all with web programming so I went to the bookstore and picked up some books on front-end development.

Building my own community website only took a couple months. With all the resources available from the platform, it was not very difficult to build my own website. In fact, all I did for this website was to make some minor changes to HTML, CSS, JavaScript, and PHP. It was during this period of building the community website that I was quickly intrigued by the potential of web development. In some ways, it was very similar to engineering in that it required the understanding of logic, testing (for quality assurance and more), and even effective visualization (i.e.,  seeing the  website on a browser versus 3-D modeling of a drawing).One difference was that I was easily able to see the end product (and intermediary products) with web development. With such newfound satisfaction, I delved into web development and ended up applying to Flatiron after about a year of self-studying; I realized that as valuable as self-studying is, a well-structured curriculum  could facilitate deeper understanding, particularly with the many resources now literally at my fingertips.

Even though web development has become one of my largest passions, it does not mean that I stopped thinking in terms of engineering. For instance, I am currently working on a redesigning computer mice in my spare time.  In the short time I have indulged in both web development and mechanical engineering, I have learned that these two fields are quite complementary in that they require creative thinking and logic within bounds (of laws of physics or coding), and I very much look forward to where these two skills lead me in the future.


Coming back to my personal story, as I researched various community websites of Korea, I found out that while there are countless active community websites, there wasn't one for English learners. So I decided to build it myself using a Korean community website building platform called "Xpress Engine", which allows users to quickly build community websites without much knowlege of web development. However, in order to fully utilize this platform, I needed to learn frontend development as well as backend. At the time, I was not familiar at all with web programming so I went to the bookstore and picked up some books on frontend develpment.

Building my own community website only took couple of months. With all the resources available from the platform, it was not very difficult to build my own. In fact, all I did for this website was to make some minor changes to HTML, CSS, JavaScript and PHP. However, during this period of building the community website, I was quickly intrigued by the capability of web development. In some ways, it was very similar to engineering in that it required logics, testing, and even visualizing (i.e. seeing you website on browser vs. 3D modeling of the drawing). However, as I mentioned earlier, the biggest and crucial difference was that I was able to see the end-product with web development. With such new found satisfaction, I delve in to web development and ended up in Flatiron school after  about a year of self-studying as I realized a well-structured lessons was crucial for deeper understanding.

Even though web development became one of my largest passions, it does not mean that I stopped thinking in terms of engineering. Even these days, I am working on a personal project to redesign a computer mice. However, as I gain more knowledge in web development I am most certainly engaging more thoughts regarding web development. While these two skillsets are seemingly complimentary, I believe they also share some similar aspects that it requires creative thinking and logic within a boundary (of laws of physics or coding). I am really looking forward to how these two skills lead me in the future.
